name: "Shortest Tests"

on:
  pull_request:
    branches: [main]

jobs:
  shortest:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Pull and set up .env.local
        run: |
          pnpm dlx vercel pull --environment=preview --token=$VERCEL_TOKEN
          cp .vercel/.env.preview.local .env.local
          test -f .env.local || (echo ".env.local not created" && exit 1)

      - name: Set up database
        run: |
          pnpm drizzle-kit generate
          pnpm db:migrate
          pnpm db:seed

      - name: Install Playwright
        run: pnpm exec playwright install chromium

      - name: Build app
        run: pnpm build

      - name: Start app in background
        run: pnpm start -p 3000 & sleep 10

      - name: Run Shortest tests
        run: pnpm shortest --headless

      - name: Display Screenshots in Action Log
        if: always()
        run: |
          echo "## Test Screenshots" >> $GITHUB_STEP_SUMMARY
          for f in .shortest/screenshots/*.png; do
            echo "### $(basename $f)" >> $GITHUB_STEP_SUMMARY
            base64 $f | awk '{print "![Screenshot](data:image/png;base64,"$1")"}' >> $GITHUB_STEP_SUMMARY
          done

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: .shortest
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 7

      - name: Post Screenshots as Comments
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const screenshotsDir = '.shortest/screenshots';
            const files = fs.readdirSync(screenshotsDir);

            let comment = '### Test Failure Screenshots\n\n';
            for (const file of files) {
              if (file.endsWith('.png')) {
                const base64 = fs.readFileSync(path.join(screenshotsDir, file)).toString('base64');
                comment += `#### ${file}\n![${file}](data:image/png;base64,${base64})\n\n`;
              }
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
